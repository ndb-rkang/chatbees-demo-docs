import chalk from "chalk";
export function catchMaybePromise(maybePromise, onError, cleanup) {
    if (
    // much faster than instanceof
    maybePromise &&
        typeof maybePromise === `object` &&
        `catch` in maybePromise) {
        return maybePromise.catch(onError).finally(cleanup);
    }
    else {
        try {
            return maybePromise;
        }
        catch (e) {
            onError(e);
        }
        finally {
            cleanup();
        }
    }
}
export const ntliLog = (message, name = `Netlify SDK`) => console.log(`${chalk.blue(name)} ${message}\n`);
export const printResetHeader = () => {
    // leave a marker line for last output
    console.log(chalk.bold.yellow(`â”€`.repeat(process.stdout.columns || 4)));
    // push all terminal output out of view
    console.log(`\n`.repeat(process.stdout.rows || 4));
};
export const envVarFromSlug = (slug) => {
    const safeSlug = slug.toUpperCase().replaceAll(/[^A-Z_]/g, "_");
    if (safeSlug[0] === "_") {
        return `I${safeSlug}`;
    }
    return safeSlug;
};
